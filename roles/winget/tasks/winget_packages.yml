---
- name: Update or install a package via winget
  ansible.windows.win_powershell:
    parameters:
      AppId: "{{ app_id }}"
      Version: "{{ version | default(omit) }}"
      Ensure: "{{ ensure | default('present') }}"
    script: |
      [CmdletBinding(SupportsShouldProcess)]
      param (
        [String] $AppId,
        [String] $Version = $null,
        [String] $Ensure = 'present'
      )

      $Ansible.Changed = $false
      $before_version = ((winget list --id $AppId --source winget --exact | Select-String -Pattern $AppId) -split '\s{2,}')[2]
      $before_pin = ((winget pin list --id $AppId --source winget --exact | Select-String -Pattern $AppId) -split '\s{2,}')[5]

      $Ansible.Result = [PSCustomObject]@{
        before_version = $before_version
        version = $null
        before_pin = $before_pin
        pin = $null
        reboot_required = $false
      }

      if ($Version) {
        if ($Version -ne $before_pin) {
          if ($PSCmdlet.ShouldProcess('target')) {
            winget pin add --source winget --id $AppId --exact --version $Version --force
          }
          $Ansible.Changed = $true
          $Ansible.Result.pin = $Version
        } else {
          $Ansible.Result.pin = $before_pin
        }
      } elseif ($before_pin) {
        if ($PSCmdlet.ShouldProcess('target')) {
          winget pin remove --source winget --id $AppId --exact
        }
        $Ansible.Changed = $true
      }

      if ($Ensure -eq 'absent') {
        if ($before_version) {
          if ($PSCmdlet.ShouldProcess('target')) {
            winget uninstall --id $AppId --exact --silent
          }
          $Ansible.Changed = $true
        }
      } elseif ($before_version -ne $Version) {
        if ($PSCmdlet.ShouldProcess('target')) {
          $action = if ($before_version) { "upgrade" } else { "install" }

          $process = Start-Process winget -ArgumentList @(
            $action,
            "--accept-package-agreements",
            "--accept-source-agreements",
            "--silent",
            "--source", "winget",
            "--id", $AppId,
            "--exact"
          ) -Wait -PassThru

          $Ansible.Result.reboot_required = $process.ExitCode -eq 3010
        }
        $Ansible.Changed = $true
      } else {
        $Ansible.Result.version = $before_version
      }

